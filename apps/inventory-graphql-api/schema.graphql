# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: Float
  notIn: [Float!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createPacket(data: PacketCreateInput!): Packet!
  createPart(data: PartCreateInput!): Part!
  deletePacket(where: PacketWhereUniqueInput!): Packet!
  deletePart(where: PartWhereUniqueInput!): Part!
  updatePacket(data: PacketUpdateInput!, where: PacketWhereUniqueInput!): Packet!
  updatePart(data: PartUpdateInput!, where: PartWhereUniqueInput!): Part!
}

type Packet {
  createdAt: DateTime!
  id: String!
  name: String
  parts(orderBy: [PartOrderByInput!], skip: Float, take: Float, where: PartWhereInput): [Part!]!
  updatedAt: DateTime!
}

input PacketCreateInput {
  name: String
  parts: PartCreateNestedManyWithoutPacketsInput
}

input PacketOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input PacketUpdateInput {
  name: String
  parts: PartUpdateManyWithoutPacketsInput
}

input PacketWhereInput {
  id: StringFilter
  name: StringNullableFilter
  parts: PartListRelationFilter
}

input PacketWhereUniqueInput {
  id: String!
}

type Part {
  color: String
  createdAt: DateTime!
  description: String
  id: String!
  packet: Packet
  updatedAt: DateTime!
  weight: Float
}

input PartCreateInput {
  color: String
  description: String
  packet: PacketWhereUniqueInput
  weight: Float
}

input PartCreateNestedManyWithoutPacketsInput {
  connect: [PartWhereUniqueInput!]
}

input PartListRelationFilter {
  every: PartWhereInput
  none: PartWhereInput
  some: PartWhereInput
}

input PartOrderByInput {
  color: SortOrder
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  packetId: SortOrder
  updatedAt: SortOrder
  weight: SortOrder
}

input PartUpdateInput {
  color: String
  description: String
  packet: PacketWhereUniqueInput
  weight: Float
}

input PartUpdateManyWithoutPacketsInput {
  connect: [PartWhereUniqueInput!]
  disconnect: [PartWhereUniqueInput!]
  set: [PartWhereUniqueInput!]
}

input PartWhereInput {
  color: StringNullableFilter
  description: StringNullableFilter
  id: StringFilter
  packet: PacketWhereUniqueInput
  weight: FloatNullableFilter
}

input PartWhereUniqueInput {
  id: String!
}

type Query {
  packet(where: PacketWhereUniqueInput!): Packet
  packets(orderBy: [PacketOrderByInput!], skip: Float, take: Float, where: PacketWhereInput): [Packet!]!
  part(where: PartWhereUniqueInput!): Part
  parts(orderBy: [PartOrderByInput!], skip: Float, take: Float, where: PartWhereInput): [Part!]!
}

enum QueryMode {
  Default
  Insensitive
}

enum SortOrder {
  Asc
  Desc
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: String
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: String
  notIn: [String!]
  startsWith: String
}
